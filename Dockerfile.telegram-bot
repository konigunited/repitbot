# Telegram Bot Dockerfile (Microservices-enabled)
FROM python:3.11-slim

# Metadata
LABEL maintainer="RepitBot Team"
LABEL service="telegram-bot"
LABEL version="1.0.0"

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    && rm -rf /var/lib/apt/lists/*

# Copy requirements and install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Install additional packages for microservices support
RUN pip install --no-cache-dir \
    aiohttp==3.9.1 \
    httpx==0.25.2 \
    structlog==23.2.0

# Copy application code
COPY ./src ./src
COPY ./telegram-bot ./telegram-bot
COPY ./bot.py .

# Create empty database file if not exists (will be initialized at runtime)
RUN touch repitbot.db

# Create logs directory
RUN mkdir -p logs

# Create non-root user
RUN adduser --disabled-password --gecos '' appuser && \
    chown -R appuser:appuser /app
USER appuser

# Environment variables
ENV PYTHONPATH=/app
ENV PYTHONUNBUFFERED=1

# Microservices configuration
ENV USER_SERVICE_URL=http://user-service:8001
ENV AUTH_SERVICE_URL=http://auth-service:8002
ENV USER_SERVICE_TIMEOUT=10
ENV AUTH_SERVICE_TIMEOUT=10
ENV USER_SERVICE_RETRIES=3
ENV AUTH_SERVICE_RETRIES=3
ENV ENABLE_MICROSERVICES=true
ENV FALLBACK_TO_MONOLITH=true

# Health check
HEALTHCHECK --interval=60s --timeout=10s --start-period=30s --retries=3 \
    CMD python -c "import sys; sys.exit(0)" || exit 1

# Run the bot
CMD ["python", "bot.py"]