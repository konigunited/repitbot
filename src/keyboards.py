# -*- coding: utf-8 -*-
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, ReplyKeyboardMarkup
from .database import TopicMastery, HomeworkStatus

# --- –û–±—â–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
def main_menu_keyboard(user_role):
    if user_role == "tutor":
        return tutor_main_keyboard()
    elif user_role == "student":
        return student_main_keyboard()
    elif user_role == "parent":
        return parent_main_keyboard()

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞ ---
TUTOR_BUTTONS = {
    "students": "üéì –°–ø–∏—Å–æ–∫ —É—á–µ–Ω–∏–∫–æ–≤",
    "add_student": "‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—á–µ–Ω–∏–∫–∞",
    "monthly_report": "üìä –û—Ç—á—ë—Ç –∑–∞ –º–µ—Å—è—Ü",
    "library": "üìö –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π",
    "stats": "üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
    "broadcast": "üì£ –†–∞—Å—Å—ã–ª–∫–∞"
}

def tutor_main_keyboard():
    keyboard = [
        [TUTOR_BUTTONS["students"], TUTOR_BUTTONS["add_student"]],
        [TUTOR_BUTTONS["monthly_report"], TUTOR_BUTTONS["library"]],
        [TUTOR_BUTTONS["stats"], TUTOR_BUTTONS["broadcast"]]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —É—á–µ–Ω–∏–∫–∞ ---
def student_main_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —É—á–µ–Ω–∏–∫–∞."""
    keyboard = [
        [
            InlineKeyboardButton("üìö –¢–µ–º—ã —É—Ä–æ–∫–æ–≤", callback_data="lessons_history"),
            InlineKeyboardButton("üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data="schedule")
        ],
        [InlineKeyboardButton("üìù –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ", callback_data="homework")],
        [InlineKeyboardButton("üí∞ –û–ø–ª–∞—Ç–∞ –∏ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å", callback_data="payment_attendance")],
        [
            InlineKeyboardButton("üìä –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å", callback_data="my_progress"),
            InlineKeyboardButton("üóÇÔ∏è –ë–∏–±–ª–∏–æ—Ç–µ–∫–∞", callback_data="materials_library")
        ],
        [InlineKeyboardButton("üí¨ –°–≤—è–∑—å —Å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–º", callback_data="chat_with_tutor")],
    ]
    return InlineKeyboardMarkup(keyboard)

def student_select_homework_keyboard(homeworks):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –î–ó –¥–ª—è —Å–¥–∞—á–∏."""
    keyboard = []
    for hw in homeworks:
        if hw.status == HomeworkStatus.PENDING:
            hw_text = (hw.description[:25] + '..') if len(hw.description) > 25 else hw.description
            button = InlineKeyboardButton(
                f"üìù {hw_text}", 
                callback_data=f"student_submit_hw_{hw.id}"
            )
            keyboard.append([button])
    
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="homework")])
    return InlineKeyboardMarkup(keyboard)

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–æ–¥–∏—Ç–µ–ª—è ---
def parent_main_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é —Ä–æ–¥–∏—Ç–µ–ª—è."""
    keyboard = [
        [InlineKeyboardButton("üë§ –ú–æ–∏ –¥–µ—Ç–∏", callback_data="select_child")],
        [InlineKeyboardButton("üí¨ –°–≤—è–∑—å —Å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–º", callback_data="parent_chat_with_tutor")]
    ]
    return InlineKeyboardMarkup(keyboard)

def parent_child_selection_keyboard(children):
    keyboard = []
    for child in children:
        keyboard.append([InlineKeyboardButton(f"üë§ {child.full_name}", callback_data=f"view_child_{child.id}")])
    return InlineKeyboardMarkup(keyboard)


def parent_child_menu_keyboard(child_id):
    keyboard = [
        [
            InlineKeyboardButton("üìä –ü—Ä–æ–≥—Ä–µ—Å—Å", callback_data=f"child_progress_{child_id}"),
            InlineKeyboardButton("üóìÔ∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ", callback_data=f"child_schedule_{child_id}")
        ],
        [
            InlineKeyboardButton("üí∞ –û–ø–ª–∞—Ç—ã", callback_data=f"child_payments_{child_id}"),
            InlineKeyboardButton("üí¨ –°–≤—è–∑—å —Å —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–æ–º", callback_data=f"parent_chat_with_tutor_{child_id}")
        ],
        [InlineKeyboardButton("‚¨ÖÔ∏è –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–≥–æ —Ä–µ–±–µ–Ω–∫–∞", callback_data="select_child")]
    ]
    return InlineKeyboardMarkup(keyboard)

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞ (–ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ) ---
def tutor_student_list_keyboard(students):
    keyboard = []
    for student in students:
        keyboard.append([InlineKeyboardButton(student.full_name, callback_data=f"tutor_view_student_{student.id}")])
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")])
    return InlineKeyboardMarkup(keyboard)

def tutor_student_profile_keyboard(student_id):
    keyboard = [
        [InlineKeyboardButton("üìö –£—Ä–æ–∫–∏ —É—á–µ–Ω–∏–∫–∞", callback_data=f"tutor_lessons_list_{student_id}")],
        [InlineKeyboardButton("üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞", callback_data=f"tutor_analytics_{student_id}")],
        [
            InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å —É—Ä–æ–∫", callback_data=f"tutor_add_lesson_{student_id}"),
            InlineKeyboardButton("üí∞ –î–æ–±–∞–≤–∏—Ç—å –æ–ø–ª–∞—Ç—É", callback_data=f"tutor_add_payment_{student_id}")
        ],
        [
            InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –§–ò–û", callback_data=f"tutor_edit_name_{student_id}"),
            InlineKeyboardButton("‚ùå –£–¥–∞–ª–∏—Ç—å —É—á–µ–Ω–∏–∫–∞", callback_data=f"tutor_delete_student_{student_id}")
        ],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ö —Å–ø–∏—Å–∫—É —É—á–µ–Ω–∏–∫–æ–≤", callback_data="tutor_student_list")]
    ]
    return InlineKeyboardMarkup(keyboard)

def tutor_lesson_list_keyboard(lessons, student_id):
    keyboard = []
    for lesson in lessons:
        date_str = lesson.date.strftime('%d.%m.%y')
        keyboard.append([InlineKeyboardButton(f"{date_str} - {lesson.topic}", callback_data=f"tutor_lesson_details_{lesson.id}")])
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ—Ñ–∏–ª—é", callback_data=f"tutor_view_student_{student_id}")])
    return InlineKeyboardMarkup(keyboard)

def tutor_lesson_details_keyboard(lesson):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ —É—Ä–æ–∫–∞."""
    keyboard = [
        [
            InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å", callback_data=f"tutor_edit_lesson_{lesson.id}")
        ]
    ]
    # –ï—Å–ª–∏ –î–ó –µ—Å—Ç—å, –¥–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –µ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞/–ø—Ä–æ–≤–µ—Ä–∫–∏
    if lesson.homeworks:
        keyboard[0].append(InlineKeyboardButton("üìù –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –î–ó", callback_data=f"tutor_check_hw_{lesson.id}"))
    else:
        keyboard[0].append(InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –î–ó", callback_data=f"tutor_add_hw_{lesson.id}"))

    if not lesson.is_attended:
        keyboard.insert(0, [InlineKeyboardButton("‚úÖ –û—Ç–º–µ—Ç–∏—Ç—å –∫–∞–∫ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã–π", callback_data=f"tutor_mark_attended_{lesson.id}")])
    
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ö —Å–ø–∏—Å–∫—É —É—Ä–æ–∫–æ–≤", callback_data=f"tutor_lessons_list_{lesson.student_id}")])
    return InlineKeyboardMarkup(keyboard)

def tutor_check_homework_keyboard(homework):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –î–ó."""
    keyboard = []
    # ÔøΩÔøΩ–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –î–ó —Å–¥–∞–Ω–æ
    if homework.status == HomeworkStatus.SUBMITTED:
        keyboard.append([
            InlineKeyboardButton("‚≠ê –ü—Ä–∏–Ω—è—Ç—å", callback_data=f"tutor_set_hw_status_{homework.id}_{HomeworkStatus.CHECKED.value}"),
            InlineKeyboardButton("üî∏ –ù–∞ –¥–æ—Ä–∞–±–æ—Ç–∫—É", callback_data=f"tutor_set_hw_status_{homework.id}_{HomeworkStatus.PENDING.value}")
        ])
    
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É—Ä–æ–∫—É", callback_data=f"tutor_lesson_details_{homework.lesson_id}")])
    return InlineKeyboardMarkup(keyboard)


def tutor_edit_student_keyboard(student_id):
    keyboard = [
        [InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –§–ò–û", callback_data=f"tutor_edit_name_{student_id}")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –ø—Ä–æ—Ñ–∏–ª—é", callback_data=f"tutor_view_student_{student_id}")]
    ]
    return InlineKeyboardMarkup(keyboard)

def tutor_delete_confirm_keyboard(student_id):
    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å", callback_data=f"tutor_delete_confirm_{student_id}"),
            InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data=f"tutor_view_student_{student_id}")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)

def tutor_edit_lesson_status_keyboard(lesson_id):
    keyboard = [
        [InlineKeyboardButton("‚ö™Ô∏è –ù–µ —É—Å–≤–æ–µ–Ω–æ", callback_data=f"tutor_set_mastery_{lesson_id}_{TopicMastery.NOT_LEARNED.value}")],
        [InlineKeyboardButton("üü° –£—Å–≤–æ–µ–Ω–æ", callback_data=f"tutor_set_mastery_{lesson_id}_{TopicMastery.LEARNED.value}")],
        [InlineKeyboardButton("üü¢ –ó–∞–∫—Ä–µ–ø–ª–µ–Ω–æ", callback_data=f"tutor_set_mastery_{lesson_id}_{TopicMastery.MASTERED.value}")],
        [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ —É—Ä–æ–∫—É", callback_data=f"tutor_lesson_details_{lesson_id}")]
    ]
    return InlineKeyboardMarkup(keyboard)

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ ---
def tutor_select_student_for_report_keyboard(students):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—á–µ–Ω–∏–∫–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞."""
    keyboard = []
    for student in students:
        keyboard.append([InlineKeyboardButton(student.full_name, callback_data=f"report_select_student_{student.id}")])
    keyboard.append([InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_report")])
    return InlineKeyboardMarkup(keyboard)

def tutor_select_month_for_report_keyboard(student_id):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–µ—Å—è—Ü–∞ –¥–ª—è –æ—Ç—á–µ—Ç–∞."""
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–Ω–æ–ø–æ–∫ —Å –ø–æ—Å–ª–µ–¥–Ω–∏–º–∏ –º–µ—Å—è—Ü–∞–º–∏
    # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø–æ–∫–∞ —Å–¥–µ–ª–∞–µ–º —Ç–∞–∫
    keyboard = [
        [
            InlineKeyboardButton("–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü", callback_data=f"report_select_month_{student_id}_0"),
            InlineKeyboardButton("–ü—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü", callback_data=f"report_select_month_{student_id}_1")
        ],
        [InlineKeyboardButton("2 –º–µ—Å—è—Ü–∞ –Ω–∞–∑–∞–¥", callback_data=f"report_select_month_{student_id}_2")],
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_report")]
    ]
    return InlineKeyboardMarkup(keyboard)

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ ---
def tutor_library_management_keyboard(materials):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π —Ä–µ–ø–µ—Ç–∏—Ç–æ—Ä–∞ (–ø—Ä–æ—Å–º–æ—Ç—Ä, –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, —É–¥–∞–ª–µ–Ω–∏–µ)."""
    keyboard = []
    # –°–ø–∏—Å–æ–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    for material in materials:
        # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –¥–ª–∏–Ω—É —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –∫–Ω–æ–ø–∫–µ
        title = (material.title[:30] + '..') if len(material.title) > 30 else material.title
        keyboard.append([InlineKeyboardButton(f"üìñ {title}", callback_data=f"tutor_view_material_{material.id}")])
    
    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    keyboard.append([
        InlineKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å", callback_data="tutor_add_material"),
        InlineKeyboardButton("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", callback_data="tutor_delete_material_start")
    ])
    
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")])
    
    return InlineKeyboardMarkup(keyboard)

def tutor_select_material_to_delete_keyboard(materials):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è."""
    keyboard = []
    for material in materials:
        keyboard.append([InlineKeyboardButton(material.title, callback_data=f"tutor_delete_material_{material.id}")])
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="tutor_manage_library")])
    return InlineKeyboardMarkup(keyboard)

def student_materials_list_keyboard(materials):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è —É—á–µ–Ω–∏–∫–∞."""
    keyboard = []
    for material in materials:
        keyboard.append([InlineKeyboardButton(material.title, callback_data=f"student_view_material_{material.id}")])
    keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="main_menu")])
    return InlineKeyboardMarkup(keyboard)

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ ---
def broadcast_confirm_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏."""
    keyboard = [
        [
            InlineKeyboardButton("‚úÖ –û—Ç–ø—Ä–∞–≤–∏—Ç—å", callback_data="broadcast_send"),
            InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="broadcast_cancel")
        ]
    ]
    return InlineKeyboardMarkup(keyboard)