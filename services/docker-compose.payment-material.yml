# Docker Compose for Payment and Material Services
# Stage 4: Payment & Material Services

version: '3.8'

services:
  # Payment Service
  payment-service:
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    container_name: repitbot-payment-service
    ports:
      - "8003:8003"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql+asyncpg://payment_user:payment_pass@payment-db:5432/payment_db
      - REDIS_URL=redis://redis:6379/2
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - USER_SERVICE_URL=http://user-service:8001
      - LESSON_SERVICE_URL=http://lesson-service:8002
      - NOTIFICATION_SERVICE_URL=http://notification-service:8006
      - LOG_LEVEL=INFO
      - DEFAULT_PRICE_PER_LESSON=1000.00
      - MAX_BALANCE=1000
    volumes:
      - payment-logs:/app/logs
      - payment-data:/app/data
    depends_on:
      payment-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - repitbot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:8003/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Payment Database
  payment-db:
    image: postgres:15-alpine
    container_name: repitbot-payment-db
    environment:
      - POSTGRES_DB=payment_db
      - POSTGRES_USER=payment_user
      - POSTGRES_PASSWORD=payment_pass
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C
    volumes:
      - payment-db-data:/var/lib/postgresql/data
      - ./payment-service/sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5435:5432"  # Different port to avoid conflicts
    networks:
      - repitbot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U payment_user -d payment_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Material Service
  material-service:
    build:
      context: ./material-service
      dockerfile: Dockerfile
    container_name: repitbot-material-service
    ports:
      - "8004:8004"
    environment:
      - ENVIRONMENT=development
      - DATABASE_URL=postgresql+asyncpg://material_user:material_pass@material-db:5432/material_db
      - REDIS_URL=redis://redis:6379/3
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - USER_SERVICE_URL=http://user-service:8001
      - LESSON_SERVICE_URL=http://lesson-service:8002
      - NOTIFICATION_SERVICE_URL=http://notification-service:8006
      - LOG_LEVEL=INFO
      - UPLOAD_DIR=/app/uploads
      - MAX_FILE_SIZE=104857600  # 100MB
    volumes:
      - material-uploads:/app/uploads
      - material-logs:/app/logs
      - material-data:/app/data
    depends_on:
      material-db:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - repitbot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import httpx; httpx.get('http://localhost:8004/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Material Database
  material-db:
    image: postgres:15-alpine
    container_name: repitbot-material-db
    environment:
      - POSTGRES_DB=material_db
      - POSTGRES_USER=material_user
      - POSTGRES_PASSWORD=material_pass
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=C
    volumes:
      - material-db-data:/var/lib/postgresql/data
      - ./material-service/sql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5436:5432"  # Different port to avoid conflicts
    networks:
      - repitbot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U material_user -d material_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Redis (shared cache and session store)
  redis:
    image: redis:7-alpine
    container_name: repitbot-redis
    command: redis-server --appendonly yes --requirepass repitbot_redis_pass
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - repitbot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5

  # RabbitMQ (message broker for events)
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: repitbot-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=repitbot_user
      - RABBITMQ_DEFAULT_PASS=repitbot_pass
      - RABBITMQ_DEFAULT_VHOST=repitbot_vhost
    ports:
      - "5672:5672"    # AMQP port
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      - ./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json:ro
    networks:
      - repitbot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Nginx (API Gateway and Load Balancer)
  nginx:
    image: nginx:alpine
    container_name: repitbot-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - user-service
      - lesson-service
      - payment-service
      - material-service
    networks:
      - repitbot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  # Payment Service volumes
  payment-db-data:
    driver: local
  payment-logs:
    driver: local
  payment-data:
    driver: local

  # Material Service volumes
  material-db-data:
    driver: local
  material-uploads:
    driver: local
  material-logs:
    driver: local
  material-data:
    driver: local

  # Shared volumes
  redis-data:
    driver: local
  rabbitmq-data:
    driver: local
  nginx-logs:
    driver: local

networks:
  repitbot-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16